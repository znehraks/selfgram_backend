type User {
  id: ID! @id
  userName: String! @unique
  email: String! @unique
  password: String!
  avatar: String @default(value: "https://sophosnews.files.wordpress.com/2014/04/anonymous-250.jpg?w=250")
  bio: String
  firstName: String
  lastName: String
  fullName: String
  posts: [Post!] @relation(name: "PostOfUser", onDelete: CASCADE)
  tagged: [Post!] @relation(name: "Tagged", onDelete: CASCADE)
  stories: [Story!] @relation(name: "StoryOfUser", onDelete: CASCADE)
  likes: [PostLike!]! @relation(name: "PostLikeOfUser", onDelete: CASCADE)
  savedPosts: [Post!] @relation(name: "Saved", onDelete: CASCADE)
  comments: [Comment!] @relation(name: "CommentOfUser", onDelete: CASCADE)
  rooms: [Room!] @relation(name: "RoomOfUser", onDelete:CASCADE)
  messages: [Message!]
  following: [User!] @relation(name: "FollowRelation")
  followers: [User!] @relation(name: "FollowRelation")
  isLogin: Boolean! @default(value: false)
  commentLikes: [CommentLike!] @relation(name: "CommentLikeOfUser", onDelete: CASCADE)
}

type Post {
  id: ID! @id
  location: String
  caption: String
  user: User @relation(name: "PostOfUser")
  files: [File!] @relation(name: "FileOfPost", onDelete: CASCADE)
  likes: [PostLike!] @relation(name: "PostLikeOfPost", onDelete: CASCADE)
  comments: [Comment!] @relation(name: "CommentOfPost", onDelete: CASCADE)
  likeCount: Int! @default(value: 0)
  commentCount: Int! @default(value: 0)
  taggedUser: [User!] @relation(name: "Tagged")
  saved: [User!] @relation(name: "Saved")
  commentLike: [CommentLike!] @relation(name: "CommentLikeOfPost", onDelete: CASCADE)
}

type PostLike {
  id: ID! @id
  user: User @relation(name: "PostLikeOfUser")
  post: Post @relation(name: "PostLikeOfPost")
}

type Story {
  id: ID! @id
  user: User @relation(name: "StoryOfUser") 
  files: [File!]! @relation(name: "FileOfStory", onDelete: CASCADE)
}

type Comment {
  id: ID! @id
  text: String!
  user: User @relation(name: "CommentOfUser")
  post: Post @relation(name: "CommentOfPost")
  commentLike: [CommentLike!] @relation(name: "CommentLikeOfComment", onDelete: CASCADE)
}

type CommentLike {
  id: ID! @id
  user: User @relation(name: "CommentLikeOfUser")
  post: Post @relation(name: "CommentLikeOfPost")
  comment: Comment @relation(name: "CommentLikeOfComment")
}

type File {
  id: ID! @id
  url: String!
  post: Post @relation(name: "FileOfPost")
  story: Story @relation(name: "FileOfStory")
}

type Room {
  id: ID! @id
  participants: [User!]! @relation(name: "RoomOfUser")
  messages: [Message!]
}

type Message {
  id: ID! @id
  text: String!
  MessageUser: User 
  room: Room!
  file: File
}
